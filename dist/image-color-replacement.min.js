var ImageReplacer,ImageReplacerDirective;ImageReplacer=function(){function t(t,n){this.drawMap=null!=n?n:[],this.original=t,this.canvas=e(t),this.ctx=r(this.canvas),this.drawed=a(this.ctx,t)}var r,a,e,n,i,c,o;return t.original=null,t.canvas=null,c=function(t){var r,a,e,n,i;if(t=t.replace("#",""),r=[],6===t.length)for(i=[0,1,2],e=0,n=i.length;n>e;e++)a=i[e],r.push(parseInt(t.substr(2*a,2),16));return r},e=function(t){var r;return r=document.createElement("canvas"),r.width=t.width,r.height=t.height,r},r=function(t){return t?t.getContext("2d"):void 0},a=function(t,r){var a;return t.drawImage(r,0,0,r.width,r.height),a=t.getImageData(0,0,r.width,r.height)},i=function(t,r){return Math.abs(t-r)},n=function(t,r,a){return t>r?r+a>t:t>r-a},o=function(t,r,a,e){return null==t[r]&&(t[r]=[]),t[r].push({c:a,to:e}),t},t.prototype.replaceColors=function(t){var r,a;return a=(new Date).getTime(),t&&(t.length>0&&(0===Object.keys(this.drawMap).length?this.replaceWithoutMap(t):this.replaceWithMap(t)),this.ctx.putImageData(this.drawed,0,0)),r=(new Date).getTime(),!0},t.prototype.replaceWithoutMap=function(t){var r,a,e,n,l,u,s;for(a=0,u=[];a<this.drawed.data.length;){for(e=0,n=t.length;n>e;e++)l=t[e],r=c(l.from),s=c(l.to),l.tolerance||(l.tolerance=10),i(this.drawed.data[a+0],r[0])<=l.tolerance&&i(this.drawed.data[a+1],r[1])<=l.tolerance&&i(this.drawed.data[a+2],r[2])<=l.tolerance&&(this.drawMap=o(this.drawMap,l.from,a,t.indexOf(l)),this.drawed.data[a+0]=s[0],this.drawed.data[a+1]=s[1],this.drawed.data[a+2]=s[2]);u.push(a+=4)}return u},t.prototype.replaceWithMap=function(t){var r,a,e,n;e=[];for(a in this.drawMap)e.push(function(){var e,i,o,l;for(o=this.drawMap[a],l=[],e=0,i=o.length;i>e;e++)r=o[e],n=c(t[r.to].to),this.drawed.data[r.c+0]=n[0],this.drawed.data[r.c+1]=n[1],l.push(this.drawed.data[r.c+2]=n[2]);return l}.call(this));return e},t.prototype.replaceHex=function(t){var r,a,e,n;if(r=[],t)for(e=0,n=t.length;n>e;e++)a=t[e],r.push([c(a.from),c(a.to)]);return r},t.prototype.toDataURL=function(t){var r;return null==t&&(t="image/png"),r=null,null!=this.canvas&&(r=this.canvas.toDataURL(t)),this.original=null,this.canvas=null,this.ctx=null,this.drawed=null,r},t}(),"undefined"!=typeof angular&&null!==angular&&(ImageReplacerDirective=function(){function t(){var t;return t={restrict:"A",link:r,scope:{colorReplace:"=",ngSrc:"@?"}}}var r;return r=function(t,r,a,e){var n;return this.original=new Image,this.map=[],n=function(t){return function(r,a,e){var n;return e.classList.toggle("loading"),n=new Image,n.crossOrigin="anonymous",n.onload=function(){var r;return r=new ImageReplacer(n,t.map),r.replaceColors(a),t.map=r.drawMap,e.src=r.toDataURL(),e.classList.remove("loading")},n.src=r.src}}(this),null!=r[0].src&&(this.original.src=r[0].src,n(this.original,t.colorReplace,r[0])),null!=t.ngSrc&&t.$watch("ngSrc",function(r){return function(a,e){return null!=a?r.original.src=t.ngSrc:void 0}}(this)),t.$watch("colorReplace",function(t){return function(a,e){return null!=a&&null!=t.original.src?n(t.original,a,r[0]):void 0}}(this),!0)},t}(),ImageReplacerDirective.$inject=[],angular.module("color-replace",[]).directive("colorReplace",ImageReplacerDirective));